import api from "./axiosInstance";

// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —á–∞—Ç–∏
export const fetchChats = async () => {
  const response = await api.get("/chats");
  return response.data;
};

// –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —á–∞—Ç
export const createChat = async () => {
  const response = await api.post("/chats");
  return response.data;
};

// –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç—É
export const fetchMessages = async (chatId) => {
  const response = await api.get(`/chats/${chatId}/messages`);
  return response.data;
};

// –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
export const sendMessage = async (chatId, message) => {
  if (!chatId) {
    throw new Error("‚ùå chatId –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ undefined!");
  }
  console.log("üì° –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –±–µ–∫:", { chatId, message });

  const response = await api.post("/chat", { chatId, message });
  return response.data;
};

export const deleteChat = async (chatId) => {
  if (!chatId) {
    throw new Error("‚ùå chatId –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ undefined!");
  }
  console.log("üóë –í–∏–¥–∞–ª–µ–Ω–Ω—è —á–∞—Ç—É:", chatId);

  const response = await api.delete(`/chats/${chatId}`);
  return response.data;
};

// src/api/chatApi.js
// –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —É –≤–∞—Å —î –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä axios –∑ –Ω–∞–∑–≤–æ—é `api`

export const updateChatName = async (chatId, newName) => {
  try {
    const response = await api.put(`/chats/${chatId}`, {
      newName,
    });
    // ‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ 'data'
    return response.data;
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Ç—É:", error);
    throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –Ω–∞–∑–≤—É —á–∞—Ç—É");
  }
};

// ... —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
